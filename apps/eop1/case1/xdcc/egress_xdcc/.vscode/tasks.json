{
    "version": "2.0.0",
    "tasks": [
      {
        "label": "INIT",
        "type": "shell",
        "command": "cd ../../../amqlib && make libclean && make",
        "args": [],
        "group": "build",
        "problemMatcher": []
      },
      {
        "label": "0 CLEAN SOURCE",
        "type": "shell",
        "command": "rm -rf annotated partitioned divvied refactored jsons verifier *working *.json;",
        "args": [],
        "group": "build",
        "problemMatcher": []
      },
      {
        "label": "1 ANNOTATE",
        "type": "shell",
        "command": "mkdir annotated; cp -R xdcc_autogen/* annotated; echo Prepared sources for CLE annotation by developer under ./annotated; echo Move to Conflict Analysis when done annotating",
        "args": [],
        "group": "build",
        "problemMatcher": []
      },
      {
        "label": "2 ANALYZE PARTITION CONFLICTS",
        "type": "shell",
        "command": "source .make/closure_env.sh; make -f .make/conflicts.make assignments && mkdir -p ./refactored && cp -r ./annotated/* ./refactored",
        "args": [],
        "group": {
          "kind": "build",
          "isDefault": true
        },
        "problemMatcher": []
      },
      {
        "label": "3 AUTOMAGIC",
        "type": "shell",
        "command": "",
        "args": [],
        "group": {
          "kind": "build",
          "isDefault": true
        },
        "dependsOrder": "sequence",
        "dependsOn": [
          "9a DIVIDE",
          "9b AUTOGEN GEDL, RPCs, IDL, Codecs",
          "9e BUILD"
        ],
        "problemMatcher": []
      },
      {
        "label": "9a DIVIDE",
        "type": "shell",
        "command": "source .make/closure_env.sh; make -f .make/divvied.make",
        "args": [],
        "group": "build",
        "problemMatcher": []
      },
      {
        "label": "9b AUTOGEN GEDL, RPCs, IDL, Codecs",
        "type": "shell",
        "command": "source .make/closure_env.sh && mkdir -p partitioned && cp -r $CLOSURE_PYTHON/gedl/heuristics/ ./partitioned && make -f .make/gedl.make gedl && make -f .make/gedl.make rautogen && make -f .make/gedl.make rpc",
        "args": [],
        "group": "build",
        "problemMatcher": []
      },
      {
        "label": "9c VERIFY",
        "type": "shell",
        "command": "source .make/closure_env.sh; make -f .make/verifier.make verify; make -f .make/verifier.make analyze; make -f .make/ect.make ect",
        "args": [],
        "group": "build",
        "problemMatcher": []
      },
      {
        "label": "9d VISUALIZE CROSS-DOMAIN CUT",
        "type": "shell",
        "command": "source .vscode/closure_env.sh; bash .vscode/cutzoom.sh; xdot -f fdp partitioned/multithreaded/abridged_1_colored.dot",
        "args": [],
        "group": "build",
        "problemMatcher": []
      },
      {
        "label": "9e BUILD",
        "type": "shell",
        "command": "source .make/closure_env.sh && cd ../xdcc_echo && cp ../egress_xdcc/.make/xdcc_echo.make ./Makefile && make && cd ../egress_xdcc && for e in ${ENCLAVES}; do make -C partitioned/${IPCMODE}/$e -f ../../../.make/${PROG}.make; done",
        "args": [],
        "group": "build",
        "problemMatcher": []
      }
    ]
  }
